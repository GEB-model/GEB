###
# This section contains several general model settings.
general:
  ###
  # model start time (YYYY-MM-DD).
  start_time: 2010-01-01
  ###
  # model end time (YYYY-MM-DD).
  end_time: 2020-01-01
  ###
  # start of the spinup time (YYYY-MM-DD).
  spinup_time: 2000-01-01
  ###
  # base folder where to report output data to
  gauges:
    - [5.728271, 50.887133]
  region:
    pour_point:
      [5.728271, 50.887133]
  input_folder: input/
  original_data: ../../../original_data/
  preprocessing_folder: preprocessing/
  report_folder: report/
  initial_conditions_folder: initial/
  init_water_table: report/init/water_table.npy
  name: default
  export_inital_on_spinup: true
  simulate_hydrology: true
  simulate_forest: false

hazards:
  floods:
    simulate: false
###
# This section can contain settings to change the behavior of the agents.
agent_settings:
  market:
    dynamic_market: false
    price_frequency: yearly
  farmers:
    ruleset: base
    base_management_yield_ratio: 1
    farmers_going_out_of_business: false
    microcredit:
      interest_rate: 0.2
      loan_duration: 2
      loss_threshold: 25
    return_fraction: 0.5172748734767878
    social_network:
      radius: 5000 # m
      size: 10 # nr of neighbors
    expected_utility:
      crop_switching: 
        ruleset: no-adaptation
      adaptation_sprinkler:
        ruleset: base
        interest_rate: 0.04
        lifespan: 10
        loan_duration: 11
        yield_multiplier: 1
        decision_horizon: 10
      adaptation_well:
        loan_duration: 21
        lifespan: 20
        decision_horizon: 20
        ruleset: no-adaptation
        pump_hours: 3.5
        specific_weight_water: 9800 # (kg/m3*m/s2)
        max_initial_sat_thickness: 50 # m
        well_yield: 0.00005 # m3/s
        pump_efficiency: 0.7 # $/KWh
        energy_cost_rate: 0.074
        maintenance_factor: 0.07
        WHY_10: 82.0209974 # $/m
        WHY_20: 164 # $/m
        WHY_30: 50 # $/m
      decisions:
        decision_horizon: 10
        expenditure_cap: 0.5
      drought_risk_calculations:
        event_perception:
          drought_threshold: 5
        risk_perception:
          base: 1.6
          coef: -2.5
          max: 4.4118829846402114
          min: 0.1
  fix_activation_order: true
  reservoir_operators:
    MinOutflowQ: 0.0
    NonDamagingOutflowQ: 4.0
    NormalOutflowQ: 0.1
    max_reservoir_release_factor: 0.03380636312896216
    ruleset: no-adaptation
  sensitivity_analysis:
    risk_aversion_factor: 1
    discount_rate_factor: 1
    interest_rate_factor: 1
    well_cost_factor: 1
    drought_threshold_factor: 1

###
# This sections contains settings for logging of the model. 
logging:
  ###
  # The file which the logs are written to.
  logfile: GEB.log  
  ###
  # The loglevel, choose from: DEBUG, INFO, WARNING, ERROR, CRITICAL
  loglevel: DEBUG

calibration:
  spinup_time: 1999-01-01
  start_time: 2001-01-01
  end_time: 2002-01-01
  path: calibration
  gpus: 0
  scenario: base
  monthly: false
  calibration_targets:
    KGE: 1
    irrigation_wells: 1
  DEAP:
    use_multiprocessing: false
    ngen: 10
    mu: 60
    lambda_: 12
    select_best: 10
  target_variables:
    report_hydrology:
      discharge:
        varname: data.grid.discharge
        function: sample,25,54
        format: csv
        single_file: true
  parameters:
    soildepth_factor:
        variable: parameters.soildepth_factor
        min: 0.8
        max: 1.8
    preferentialFlowConstant:
        variable: parameters.preferentialFlowConstant
        min: 0.5
        max: 8
    arnoBeta_add:
        variable: parameters.arnoBeta_add
        min: 0.01
        max: 1.0
    factor_interflow:
        variable: parameters.factor_interflow
        min: 0.33
        max: 3.0
    recessionCoeff_factor:
        variable: parameters.recessionCoeff_factor
        min: 0.05
        max: 10
    manningsN:
        variable: parameters.manningsN
        min: 0.1
        max: 10.0
    lakeAFactor:
        variable: parameters.lakeAFactor
        min: 0.333
        max: 5.0
    lakeEvaFactor:
        variable: parameters.lakeEvaFactor
        min: 0.8
        max: 3.0
    max_reservoir_release_factor:
        variable: agent_settings.reservoir_operators.max_reservoir_release_factor
        min: 0.01
        max: 0.05
    return_fraction:
        variable: agent_settings.farmers.return_fraction
        min: 0.3
        max: 0.8
    well_implementation_intention_behaviour_gap:
        variable: agent_settings.farmers.well_implementation_intention_behaviour_gap
        min: 0.0
        max: 1.0

###
# This section is only used for the visual interface. This section closely works together with the `artists`.
draw:
  ###
  # Here, you can specify which types of agents are to be drawn. In addition, you can specify options on how those agents will be drawn. These options must correspond to method arguments in the artists.
  draw_agents:
    crop_farmers:
      draw_every_nth: 1
  ###
  # Specify the colors and names of the crops to use here. The indices must match the indices the crop factors file (../DataDrive/GEB/input/crop_data/crop_factors.csv).
  crop_data:
    0:
      name: Bajra
      color: '#e6194b'
    1:
      name: Groundnut
      color: '#3cb44b'
    2:
      name: Jowar
      color: '#ffe119'
    3:
      name: Paddy
      color: '#4363d8'
    4:
      name: Sugarcane
      color: '#f58231'
    5:
      name: Wheat
      color: '#911eb4'
    6:
      name: Cotton
      color: '#46f0f0'
    7:
      name: Gram
      color: '#f032e6'
    8:
      name: Maize
      color: '#bcf60c'
    9:
      name: Moong
      color: '#fabebe'
    10:
      name: Ragi
      color: '#008080'
    11:
      name: Sunflower
      color: '#e6beff'
    12:
      name: Tur (Arhar)
      color: '#9a6324'

###
# Here, you can configure which data should be saved from the model in the `report` folder. This should be formatted as follows:
#
# - **name**: name of the folder to which the data is saved.
#
#   - **type**: agent type e.g., farmer. Should be identical to attribute name in Agents class.
#   - **function**: whether to use a function to parse the data. 'null' means the data is saved literally, 'mean' takes the mean etc. Options are given in honeybees's documentation`.
#   - **varname**: attribute name of variable in agent class.
#   - **format**: format to save to, options are 'csv', 'npz' and 'netcdf'.
#   - **frequency**: frequency of saving the data. Options are 'initial', 'final', 'every'. If 'every' is chosen, 'day', 'month' or 'year' can be specified.
#   - **single_file**: whether to save all data in a single file. This option is compulsory for netcdf format.
report:
  remaining_irrigation_limit_m3:
    type: crop_farmers
    function: null
    varname: remaining_irrigation_limit_m3
    format: npz
  irrigation_source:
    type: crop_farmers
    function: null
    varname: irrigation_source
    frequency:
      every: month
      day: 1
    format: npz
  field_size:
    type: crop_farmers
    function: null
    varname: field_size_per_farmer
    frequency: initial
    format: npz
  command_area:
    type: crop_farmers
    function: null
    varname: farmer_command_area
    frequency: initial
    format: npz
  elevation:
    type: crop_farmers
    function: null
    varname: elevation
    frequency: final
    format: npz
  activation_order:
    type: crop_farmers
    function: null
    varname: activation_order_by_elevation
    format: npz
    frequency: initial
  reservoir_irrigation:
    type: crop_farmers
    function: null
    varname: reservoir_abstraction_m3_by_farmer
    format: npz
  groundwater_irrigation:
    type: crop_farmers
    function: null
    varname: groundwater_abstraction_m3_by_farmer
    format: npz
  channel_irrigation:
    type: crop_farmers
    function: null
    varname: channel_abstraction_m3_by_farmer
    format: npz
  groundwater_depth:
    type: crop_farmers
    function: null
    frequency:
      every: month
      day: 1
    varname: groundwater_depth
    format: npz
  well_depth:
    type: crop_farmers
    function: null
    frequency:
      every: month
      day: 1
    varname: well_depth
    format: npz
  well_adaptation:
    type: crop_farmers
    function: mean
    varname: adapted[:,1]
    format: npz
    frequency:
      every: month
      day: 1
  yearly_abstraction_m3_by_farmer_channel:
    type: crop_farmers
    function: null
    varname: yearly_abstraction_m3_by_farmer[:, 0]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_abstraction_m3_by_farmer_reservoir:
    type: crop_farmers
    function: null
    varname: yearly_abstraction_m3_by_farmer[:, 1]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_abstraction_m3_by_farmer_groundwater:
    type: crop_farmers
    function: null
    varname: yearly_abstraction_m3_by_farmer[:, 2]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_profit:
    type: crop_farmers
    function: null
    varname: yearly_profits[:,-1]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_yield_ratio:
    type: crop_farmers
    function: null
    varname: yearly_yield_ratio[:,1]
    format: npz
    frequency:
      every: month
      day: 1

report_hydrology:
  groundwater_depth:
    varname: groundwater.groundwater_depth
    function: mean
    format: csv
    single_file: true
  groundwater_depth_map:
    varname: groundwater.groundwater_depth
    function: null
    format: zarr
    single_file: true
  reservoir_storage:
    varname: lakes_reservoirs.reservoir_storage
    function: sum
    format: csv
    single_file: true
  lake_storage:
    varname: lakes_reservoirs.lake_storage
    function: sum
    format: csv
    single_file: true
  discharge_daily:
    varname: data.grid.discharge
    function: null
    format: zarr
    single_file: true
  discharge_daily:
    varname: data.grid.discharge
    function: sample_coord,73.98727,19.00464
    format: csv
    single_file: true

parameters:
  SnowMeltCoef: 0.004
  arnoBeta_add: 0.6653797014119323
  lakeAFactor: 1
  lakeEvaFactor: 2.6777823102359894
  manningsN: 0.8269807271111366
  preferentialFlowConstant: 3.14300925049279