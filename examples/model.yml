# The {GEB_PACKAGE_DIR} prefix is a special prefix that is replaced by the path to the geb package.
# You can also find the reasonable_defaults/model.yml file relative to this file.
inherits: "{GEB_PACKAGE_DIR}/reasonable_default_config.yml"

###
# This section contains several general model settings.
general:
  ###
  # model start time (YYYY-MM-DD).
  start_time: 2010-01-01
  ###
  # model end time (YYYY-MM-DD).
  end_time: 2020-01-01
  ###
  # start of the spinup time (YYYY-MM-DD).
  spinup_time: 2000-01-01
  ###
  # base folder where to report output data to
  gauges:
    - [5.728271, 50.887133]
  region:
    pour_point:
      [5.728271, 50.887133]

calibration:
  spinup_time: 1999-01-01
  start_time: 2001-01-01
  end_time: 2002-01-01
  path: calibration
  gpus: 0
  scenario: base
  monthly: false
  calibration_targets:
    KGE: 1
    irrigation_wells: 1
  DEAP:
    use_multiprocessing: false
    ngen: 10
    mu: 60
    lambda_: 12
    select_best: 10
  target_variables:
    report_hydrology:
      discharge:
        varname: data.grid.discharge
        function: sample,25,54
        format: csv
        single_file: true
  parameters:
    soildepth_factor:
        variable: parameters.soildepth_factor
        min: 0.8
        max: 1.8
    preferentialFlowConstant:
        variable: parameters.preferentialFlowConstant
        min: 0.5
        max: 8
    arnoBeta_add:
        variable: parameters.arnoBeta_add
        min: 0.01
        max: 1.0
    factor_interflow:
        variable: parameters.factor_interflow
        min: 0.33
        max: 3.0
    recessionCoeff_factor:
        variable: parameters.recessionCoeff_factor
        min: 0.05
        max: 10
    manningsN:
        variable: parameters.manningsN
        min: 0.1
        max: 10.0
    lakeAFactor:
        variable: parameters.lakeAFactor
        min: 0.333
        max: 5.0
    lakeEvaFactor:
        variable: parameters.lakeEvaFactor
        min: 0.8
        max: 3.0
    max_reservoir_release_factor:
        variable: agent_settings.reservoir_operators.max_reservoir_release_factor
        min: 0.01
        max: 0.05
    return_fraction:
        variable: agent_settings.farmers.return_fraction
        min: 0.3
        max: 0.8
    well_implementation_intention_behaviour_gap:
        variable: agent_settings.farmers.well_implementation_intention_behaviour_gap
        min: 0.0
        max: 1.0

###
# Here, you can configure which data should be saved from the model in the `report` folder. This should be formatted as follows:
#
# - **name**: name of the folder to which the data is saved.
#
#   - **type**: agent type e.g., farmer. Should be identical to attribute name in Agents class.
#   - **function**: whether to use a function to parse the data. 'null' means the data is saved literally, 'mean' takes the mean etc. Options are given in honeybees's documentation`.
#   - **varname**: attribute name of variable in agent class.
#   - **format**: format to save to, options are 'csv', 'npz' and 'netcdf'.
#   - **frequency**: frequency of saving the data. Options are 'initial', 'final', 'every'. If 'every' is chosen, 'day', 'month' or 'year' can be specified.
#   - **single_file**: whether to save all data in a single file. This option is compulsory for netcdf format.
report:
  remaining_irrigation_limit_m3:
    type: crop_farmers.bucket
    function: null
    varname: remaining_irrigation_limit_m3
    format: npz
  irrigation_source:
    type: crop_farmers.bucket
    function: null
    varname: irrigation_source
    frequency:
      every: month
      day: 1
    format: npz
  field_size:
    type: crop_farmers
    function: null
    varname: field_size_per_farmer
    frequency: initial
    format: npz
  command_area:
    type: crop_farmers.bucket
    function: null
    varname: farmer_command_area
    frequency: initial
    format: npz
  elevation:
    type: crop_farmers.bucket
    function: null
    varname: elevation
    frequency: final
    format: npz
  activation_order:
    type: crop_farmers
    function: null
    varname: activation_order_by_elevation
    format: npz
    frequency: initial
  reservoir_irrigation:
    type: crop_farmers.bucket
    function: null
    varname: reservoir_abstraction_m3_by_farmer
    format: npz
  groundwater_irrigation:
    type: crop_farmers.bucket
    function: null
    varname: groundwater_abstraction_m3_by_farmer
    format: npz
  channel_irrigation:
    type: crop_farmers.bucket
    function: null
    varname: channel_abstraction_m3_by_farmer
    format: npz
  groundwater_depth:
    type: crop_farmers
    function: null
    frequency:
      every: month
      day: 1
    varname: groundwater_depth
    format: npz
  well_depth:
    type: crop_farmers.bucket
    function: null
    frequency:
      every: month
      day: 1
    varname: well_depth
    format: npz
  well_adaptation:
    type: crop_farmers.bucket
    function: mean
    varname: adapted[:,1]
    format: npz
    frequency:
      every: month
      day: 1
  yearly_abstraction_m3_by_farmer_channel:
    type: crop_farmers.bucket
    function: null
    varname: yearly_abstraction_m3_by_farmer[:, 0, 0]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_abstraction_m3_by_farmer_reservoir:
    type: crop_farmers.bucket
    function: null
    varname: yearly_abstraction_m3_by_farmer[:, 1, 0]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_abstraction_m3_by_farmer_groundwater:
    type: crop_farmers.bucket
    function: null
    varname: yearly_abstraction_m3_by_farmer[:, 2, 0]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_profit:
    type: crop_farmers.bucket
    function: null
    varname: yearly_profits[:,0]
    format: npz
    frequency:
      every: year
      month: 12
      day: 31
  yearly_yield_ratio:
    type: crop_farmers.bucket
    function: null
    varname: yearly_yield_ratio[:,1]
    format: npz
    frequency:
      every: month
      day: 1

report_hydrology:
  groundwater_depth:
    varname: groundwater.groundwater_depth
    function: mean
    format: csv
    single_file: true
  groundwater_depth_map:
    varname: groundwater.groundwater_depth
    function: null
    format: zarr
    single_file: true
  reservoir_storage:
    varname: lakes_reservoirs.reservoir_storage
    function: sum
    format: csv
    single_file: true
  lake_storage:
    varname: lakes_reservoirs.lake_storage
    function: sum
    format: csv
    single_file: true
  discharge_daily:
    varname: data.grid.discharge
    function: null
    format: zarr
    single_file: true
  discharge_daily:
    varname: data.grid.discharge
    function: sample_coord,73.98727,19.00464
    format: csv
    single_file: true

parameters:
  SnowMeltCoef: 0.004
  arnoBeta_add: 0.6653797014119323
  lakeAFactor: 1
  lakeEvaFactor: 2.6777823102359894
  manningsN: 0.8269807271111366
  preferentialFlowConstant: 3.14300925049279